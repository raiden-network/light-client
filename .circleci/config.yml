version: 2.1

parameters:
  base_docker_image:
    type: string
    default: cimg/node:lts-browsers

  e2e_environment_docker_image:
    type: string
    default: raidennetwork/lightclient-e2e-environment:v2.0.0

  working_directory:
    type: string
    default: ~/src

  test_report_directory:
    type: string
    default: reports/junit

anchor_1: &attach_options
  at: << pipeline.parameters.working_directory >>

anchor_2: &filter_release_tag
  filters:
    tags:
      only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

anchor_3: &executor_shared_options
  working_directory: << pipeline.parameters.working_directory >>
  environment:
    JEST_JUNIT_OUTPUT_DIR: << pipeline.parameters.test_report_directory >>


executors:
  base-executor:
    <<: *executor_shared_options
    docker:
      - image: << pipeline.parameters.base_docker_image >>

  e2e-environment-executor:
    <<: *executor_shared_options
    docker:
      - image: << pipeline.parameters.base_docker_image >>
      - image: << pipeline.parameters.e2e_environment_docker_image >>

commands:
  upload_test_results_and_coverage:
    parameters:
      base_flag:
        type: enum
        enum: [sdk, dapp, cli]
      test_kind_flag:
        type: enum
        enum: [unit, integration, e2e]
    steps:
      - store_test_results:
          path: << pipeline.parameters.test_report_directory >>
      - store_artifacts:
          path: << pipeline.parameters.test_report_directory >>
      - run:
          name: Upload test coverage results to CodeCov
          command: >
            bash <(curl -s https://codecov.io/bash) -C $CIRCLE_SHA1
            -F << parameters.base_flag >>
            -F << parameters.base_flag >>.<< parameters.test_kind_flag >>

  publish_workspace_on_npm_registry:
    parameters:
      workspace:
        description: The yarn workspace to publish
        type: enum
        enum: ['raiden-ts', '@raiden_network/raiden-cli']
    steps:
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      - run:
          name: Publish on NPM registry
          command: yarn workspace << parameters.workspace >> publish --no-git-tag-version --non-interactive

jobs:
  install:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - raiden-v7-yarn-{{ checksum "yarn.lock" }}
            - raiden-v7-yarn-
      - run: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: raiden-v7-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache # Cypress stores its stuff here.
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths:
            - ./*

  build_sdk:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-ts
    steps:
      - attach_workspace: *attach_options
      - run: yarn build
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths:
            - ./*

  build_dapp:
    parameters:
      mode:
        description: Mode to configure the environment of the dApp build
        type: enum
        enum: [production, staging, development, e2e, raiden-package, v2]
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-dapp
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Build dapp
          command: yarn build --mode << parameters.mode >>
      - run:
          name: Compress dapp
          command: tar -czvf dapp.tgz dist
      - store_artifacts:
          path: dapp.tgz
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths:
            - ./*

  build_cli:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-cli
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Build CLI and bundle
          command: |
            yarn build
            yarn build:bundle
            yarn build:webui
      - run:
          name: Compress CLI and bundle
          command: |
            mkdir -p ./cli/
            yarn pack
            mv --verbose ./*raiden-cli*.tgz ./cli/
            cp --verbose ./raiden ./package.json ./bundle/
            tar --create --gzip --verbose --file ./cli/raiden-cli-bundle.tgz ./bundle --transform='s/^bundle/raiden-cli/'
      - store_artifacts:
          path: ./cli
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths:
            - ./*

  lint:
    working_directory: << pipeline.parameters.working_directory >>
    executor: base-executor
    steps:
      - attach_workspace: *attach_options
      - run: yarn lint

  test_sdk_unit:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-ts
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Run unit tests
          command: yarn test:unit --ci --runInBand
      - upload_test_results_and_coverage:
          base_flag: sdk
          test_kind_flag: unit

  test_sdk_integration:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-ts
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Run integration tests
          command: yarn test:integration --ci --runInBand
      - upload_test_results_and_coverage:
          base_flag: sdk
          test_kind_flag: integration

  test_sdk_e2e:
    executor: e2e-environment-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-ts
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Run end-to-end tests
          command: yarn test:e2e:docker --ci --runInBand
      - upload_test_results_and_coverage:
          base_flag: sdk
          test_kind_flag: e2e

  test_dapp_unit:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-dapp
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Run unit tests
          command: yarn test:unit --ci --runInBand
      - upload_test_results_and_coverage:
          base_flag: dapp
          test_kind_flag: unit

  test_dapp_e2e:
    executor: e2e-environment-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-dapp
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Run e2e tests
          command: yarn test:e2e:docker
          no_output_timeout: 60m
      # TODO: Check how we can make this unified with how other jobs upload
      # the test results (overwrite Cypress directory config via cli parameters)
      - store_test_results:
          path: tests/e2e/results/reports
      - store_artifacts:
          path: tests/e2e/results/videos
      - store_artifacts:
          path: tests/e2e/results/screenshots

  generate_documentation:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>
    steps:
      - attach_workspace: *attach_options
      - run:
          name: Generate SDK docs
          command: >
            yarn workspace raiden-ts run docs &&
            cp -vr ./raiden-ts/docs ./raiden-dapp/dist/
      - persist_to_workspace:
          root: << pipeline.parameters.working_directory >>
          paths:
            - ./raiden-dapp/dist/docs

  deploy_gh_pages:
    parameters:
      public_path:
        description: The public path where to reach deployment (must be correct according to the build mode)
        type: string
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>/raiden-dapp
    steps:
      - attach_workspace: *attach_options
      - add_ssh_keys:
          fingerprints:
            - 'ed:c9:40:2a:96:6c:90:fd:46:18:2d:bf:8d:a8:a9:b3'
      - run: ./deploy.sh << parameters.public_path >>

  publish_on_npm_registry:
    executor: base-executor
    working_directory: << pipeline.parameters.working_directory >>
    steps:
      - attach_workspace: *attach_options
      - publish_workspace_on_npm_registry:
          workspace: 'raiden-ts'
      - publish_workspace_on_npm_registry:
          workspace: '@raiden_network/raiden-cli'

workflows:
  default_workflow:
    unless:
      or:
        - equal: [ master, << pipeline.git.branch >> ]
        - equal: [ v2, << pipeline.git.branch >> ]
        - equal: [ gh-pages, << pipeline.git.branch >> ]

    jobs:
      - install
      - build_sdk:
          requires:
            - install
      - test_sdk_unit:
          requires:
            - install
      - test_sdk_integration:
          requires:
            - install
      - test_sdk_e2e:
          requires:
            - install
      - build_dapp:
          mode: development
          requires:
            - build_sdk
      - test_dapp_unit:
          requires:
            - build_sdk
      - test_dapp_e2e:
          requires:
            - build_sdk
      - build_cli:
          requires:
            - build_sdk
      - lint:
          requires:
            - build_sdk

  publish_staging:
    when:
      equal: [ master, << pipeline.git.branch >> ]

    jobs:
      - install
      - build_sdk:
          requires:
            - install
      - test_sdk_unit:
          requires:
            - install
      - test_sdk_integration:
          requires:
            - install
      - test_sdk_e2e:
          requires:
            - install
      - build_dapp:
          mode: staging
          requires:
            - build_sdk
      - test_dapp_unit:
          requires:
            - build_sdk
      - test_dapp_e2e:
          requires:
            - build_sdk
      - deploy_gh_pages:
          public_path: /staging
          requires:
            - build_dapp
            - test_dapp_unit
            - test_dapp_e2e

  publish_v2:
    when:
      equal: [ v2, << pipeline.git.branch >> ]

    jobs:
      - install
      - build_sdk:
          requires:
            - install
      - test_sdk_unit:
          requires:
            - install
      - test_sdk_integration:
          requires:
            - install
      - test_sdk_e2e:
          requires:
            - install
      - build_dapp:
          mode: v2
          requires:
            - build_sdk
      - test_dapp_unit:
          requires:
            - build_sdk
      - test_dapp_e2e:
          requires:
            - build_sdk
      - deploy_gh_pages:
          public_path: /v2
          requires:
            - build_dapp
            - test_dapp_unit
            - test_dapp_e2e

  publish_production:
    when:
      and:
        - not: << pipeline.git.branch >>
        - << pipeline.git.tag >>

    # Note:
    # In constrast to branches, each job that should run on a pipeline triggered
    # by a new tag must use a tag filter. Else the job does not get executed, no
    # matter its dependencies or anything else.
    jobs:
      - install:
          <<: *filter_release_tag
      - build_sdk:
          <<: *filter_release_tag
          requires:
            - install
      - build_dapp:
          <<: *filter_release_tag
          mode: production
          requires:
            - build_sdk
      - build_cli:
          <<: *filter_release_tag
          requires:
            - build_sdk
      - generate_documentation:
          <<: *filter_release_tag
          requires:
            - build_dapp
      - deploy_gh_pages:
          <<: *filter_release_tag
          public_path: /
          requires:
            - build_dapp
            - generate_documentation
      - approve_publish:
          <<: *filter_release_tag
          type: approval
          requires:
            - build_sdk
            - build_cli
      - publish_on_npm_registry:
          <<: *filter_release_tag
          context: 'Raiden Context'
          requires:
            - approve_publish
